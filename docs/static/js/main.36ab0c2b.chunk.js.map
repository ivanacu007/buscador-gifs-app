{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,OAKd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAfc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWbM,GAXa,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,yBAAKc,UAAU,0CACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHFO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDbwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,eACZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAkB,GAAK,OACZ,kBAAC,EAAD,eACIC,IAAKD,EAAMhB,IACPgB,UEbnBE,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,YAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAIA,OACI,6BACI,gDACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI4B,IAAK5B,EACLA,SAAUA,U,MCftC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.36ab0c2b.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nexport const CategoryAdd = ({ setCategories }) => {\n\n    const [inputValue, setinputValue] = useState('');\n    const handleInputChange = (e) => {\n        setinputValue(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(categories => [inputValue, ...categories]);\n            setinputValue('');\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nCategoryAdd.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=y714aqmGMZng8sm1GYgfZaAG0v9kg3mB`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n   return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    // console.log(id,title,url);\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n           <img src={url} alt={title} />\n           <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n  \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(image => (\n                        <GifGridItem\n                            key={image.id}\n                            {...image}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs.js'\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n        .then(imgs => {\n            setState({\n                data: imgs,\n                loading: false\n            });\n        })\n    }, [category]);\n\n    return state;\n}","import React, { useState } from 'react'\nimport { CategoryAdd } from './components/CategoryAdd';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    // const categories = ['One Punch', 'Pokemon', 'Sakura'];\n    const [categories, setCategories] = useState(['Pokemon']);\n    // const handleAdd = () =>{\n    //     setCategories(['Star Wars', ...categories]);\n    // }\n    return (\n        <div>\n            <h2>Buscador de gifs</h2>\n            <CategoryAdd setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid\n                            key={category}\n                            category={category} />\n                    ))\n                }\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n"],"sourceRoot":""}